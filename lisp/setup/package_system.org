* Package System

기본적으로 Common Lisp 은 =:cl= 또는 =:common-list-user= 라는
패키지에서 시작한다. 해당 내용은 =*package*= 라는 전역변수에서 확인이
가능하다.

=:my-package= 라는 패키지를 만들고 두 함수 =foo1= 과 =foo2= 가 있다면
명시적인 접근법은 =my-package:foo1=, =my-package:foo2= 가 된다. 이때
=:export= 를 통해 명시적으로 외부에 노출시켜야 접근이 가능하다.

#+BEGIN_SRC lisp

  (defpackage "my-package"
    (:use :cl)
    (:nicknames "P1")
    (:export :FOO2))

  (in-package "my-package")

  (defun foo1 () "foo1")

  (defun foo2 () "foo2")

  (in-package :cl)

  ;; 이 함수는 이용 가능하다
  (p1:foo2)

  ;; 아래는 오류가 난다.
  (p1:foo1)
  
#+END_SRC

** Quicklisp 프로젝트로 패키징하기

패키지를 구성하는데에는 두 개의 파일이 필요하다. 하나는 =package.lisp= 이며, 다른 하나는 =.asd= 파일이다.

*** package.lisp

=package.lisp= 은 해당 패키지에서 필요한 다른 패키지를 정의하거나, 공개적으로 외부에 노출될 함수의 목록을 정의한다.

#+BEGIN_SRC lisp

  (defpackage #:plotlib
    (:use #:cl #:vecto)
    (:export save-png plot-fill-rect plot-frame-rect
             plot-size-rect plot-line plot-string plot-string-bold
             pen-width))

#+END_SRC

위에 정의한 함수를 실행해보려면 패키지를 로그하고, 노출된 함수를 패키지 이름 =plotlib:= 을 붙여 호출하면 된다.

#+BEGIN_SRC lisp

  (ql:quickiload "plotlib")
  (plotlib::test-plotlib "test-plotlib.png")
  
#+END_SRC

** asd 파일

=package.lisp= 파일과 별도로 확장자 =.asd= 를 가진 파일이 있다.

#+BEGIN_SRC lisp

  (asdf:defsystem #:plotlib
    :description "Describe plotlib here"
    :author "mark.watson@gmail.com"
    :license "Apache 2"
    :depends-on (#:vecto)
    :components ((:file "package")
                 (:file "plotlib")))
  
#+END_SRC

이 파일에서 의존성을 추가하면 Quicklisp 이 적절하게 해당 패키지를 추가해줄 것이다.
